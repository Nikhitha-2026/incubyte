{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\incubyte\\\\src\\\\UserFormDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button, TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserFormDialog = ({\n  open,\n  onClose,\n  onSubmit,\n  user,\n  existingUsers\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\"\n  });\n  const [emailError, setEmailError] = useState(false);\n  const [emailErrorMsg, setEmailErrorMsg] = useState(\"\");\n  const [nameError, setNameError] = useState(false);\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\n  const [duplicateError, setDuplicateError] = useState(\"\");\n  useEffect(() => {\n    if (user) {\n      setFormData(user);\n    } else if (open) {\n      // Clear the form when adding a new user\n      setFormData({\n        name: \"\",\n        email: \"\"\n      });\n    }\n  }, [user, open]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    if (name === \"email\") {\n      validateEmail(value);\n    }\n    if (name === \"name\") {\n      validateName(value);\n    }\n  };\n  const handleSubmit = () => {\n    const isNameValid = validateName(formData.name);\n    const isEmailValid = validateEmail(formData.email);\n    if (isNameValid && isEmailValid && !checkForDuplicates()) {\n      onSubmit(formData);\n      onClose(); // Close the popup after saving\n    }\n  };\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const isValid = emailRegex.test(email);\n    setEmailError(!isValid);\n    setEmailErrorMsg(isValid ? \"\" : \"Enter a valid email address.\");\n    return isValid;\n  };\n  const validateName = name => {\n    const nameRegex = /^[A-Za-z\\s]+$/;\n    const isValid = nameRegex.test(name);\n    setNameError(!isValid);\n    setNameErrorMsg(isValid ? \"\" : \"Name must only contain alphabets.\");\n    return isValid;\n  };\n  const checkForDuplicates = () => {\n    const isDuplicate = existingUsers.some(existingUser => (existingUser.email === formData.email || existingUser.name === formData.name) && existingUser.id !== (user === null || user === void 0 ? void 0 : user.id) // Allow editing the current user without triggering a duplicate error\n    );\n    if (isDuplicate) {\n      setDuplicateError(\"Duplicate name or email found.\");\n    } else {\n      setDuplicateError(\"\");\n    }\n    return isDuplicate;\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: user ? \"Edit User\" : \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        fullWidth: true,\n        margin: \"normal\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        error: nameError,\n        helperText: nameErrorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        fullWidth: true,\n        margin: \"normal\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        error: emailError,\n        helperText: emailErrorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), duplicateError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: duplicateError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"secondary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(UserFormDialog, \"aEUQDwX8aKZuS6MKR3qaVY4mR84=\");\n_c = UserFormDialog;\nexport default UserFormDialog;\nvar _c;\n$RefreshReg$(_c, \"UserFormDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogActions","DialogContent","DialogTitle","Button","TextField","jsxDEV","_jsxDEV","UserFormDialog","open","onClose","onSubmit","user","existingUsers","_s","formData","setFormData","name","email","emailError","setEmailError","emailErrorMsg","setEmailErrorMsg","nameError","setNameError","nameErrorMsg","setNameErrorMsg","duplicateError","setDuplicateError","handleChange","e","value","target","validateEmail","validateName","handleSubmit","isNameValid","isEmailValid","checkForDuplicates","emailRegex","isValid","test","nameRegex","isDuplicate","some","existingUser","id","children","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","margin","onChange","error","helperText","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/incubyte/src/UserFormDialog.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Dialog, DialogActions, DialogContent, DialogTitle, Button, TextField } from \"@mui/material\";\r\n\r\nconst UserFormDialog = ({ open, onClose, onSubmit, user, existingUsers }) => {\r\n  const [formData, setFormData] = useState({ name: \"\", email: \"\" });\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [emailErrorMsg, setEmailErrorMsg] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n  const [nameErrorMsg, setNameErrorMsg] = useState(\"\");\r\n  const [duplicateError, setDuplicateError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      setFormData(user);\r\n    } else if (open) {\r\n      // Clear the form when adding a new user\r\n      setFormData({ name: \"\", email: \"\" });\r\n    }\r\n  }, [user, open]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    if (name === \"email\") {\r\n      validateEmail(value);\r\n    }\r\n    if (name === \"name\") {\r\n      validateName(value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const isNameValid = validateName(formData.name);\r\n    const isEmailValid = validateEmail(formData.email);\r\n\r\n    if (isNameValid && isEmailValid && !checkForDuplicates()) {\r\n      onSubmit(formData);\r\n      onClose(); // Close the popup after saving\r\n    }\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const isValid = emailRegex.test(email);\r\n    setEmailError(!isValid);\r\n    setEmailErrorMsg(isValid ? \"\" : \"Enter a valid email address.\");\r\n    return isValid;\r\n  };\r\n\r\n  const validateName = (name) => {\r\n    const nameRegex = /^[A-Za-z\\s]+$/;\r\n    const isValid = nameRegex.test(name);\r\n    setNameError(!isValid);\r\n    setNameErrorMsg(isValid ? \"\" : \"Name must only contain alphabets.\");\r\n    return isValid;\r\n  };\r\n\r\n  const checkForDuplicates = () => {\r\n    const isDuplicate = existingUsers.some(\r\n      (existingUser) =>\r\n        (existingUser.email === formData.email || existingUser.name === formData.name) &&\r\n        existingUser.id !== user?.id // Allow editing the current user without triggering a duplicate error\r\n    );\r\n\r\n    if (isDuplicate) {\r\n      setDuplicateError(\"Duplicate name or email found.\");\r\n    } else {\r\n      setDuplicateError(\"\");\r\n    }\r\n\r\n    return isDuplicate;\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>{user ? \"Edit User\" : \"Add User\"}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          label=\"Name\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          error={nameError}\r\n          helperText={nameErrorMsg}\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          error={emailError}\r\n          helperText={emailErrorMsg}\r\n        />\r\n        {duplicateError && <p style={{ color: \"red\" }}>{duplicateError}</p>}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          Save\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserFormDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}